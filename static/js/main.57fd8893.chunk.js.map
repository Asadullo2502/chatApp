{"version":3,"sources":["containers/Sign/Sign.jsx","Components/Avatar.jsx","Components/CardBlock.jsx","containers/Body/Body.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","setToken","client","setMyName","classes","userName","useRef","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","type","label","name","autoComplete","autoFocus","inputRef","Button","color","onClick","e","preventDefault","window","localStorage","setItem","current","value","emit","AvatarBlock","text","userId","setTeleName","ListItem","button","alt","src","PersonIcon","style","background","ListItemText","primary","marginLeft","root","minWidth","bullet","transform","title","fontSize","pos","marginBottom","CardBlock","time","isMe","Card","CardContent","justifyContent","gutterBottom","fontWeight","padding","borderRadius","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","Body","users","messages","setMessages","date","Date","message","useTheme","React","useState","open","setOpen","teleName","setTelename","console","log","AppBar","position","clsx","Toolbar","IconButton","edge","noWrap","Drawer","direction","Divider","List","length","map","el","user","getItem","bottom","Input","minRows","placeholder","endIcon","alert","toLocaleTimeString","App","setClient","setUsers","token","useEffect","IO","transports","on","data","array","key","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57fd8893.chunk.js","sourcesContent":["\r\nimport  { useRef } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n   },\r\n   avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n   },\r\n   form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n   },\r\n   submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n   },\r\n}));\r\n\r\nexport default function SignIn({ setToken, client, setMyName}) {\r\n   const classes = useStyles();\r\n   const userName = useRef(null)\r\n\r\n   \r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      window.localStorage.setItem('user', userName.current.value)\r\n      setMyName(userName.current.value)\r\n      client.emit('come', userName.current.value)\r\n      setToken(true)\r\n   }\r\n\r\n   return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n         <CssBaseline />\r\n         <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n               Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n               <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"Ismingiz\"\r\n                  type=\"text\"\r\n                  label=\"Ismingiz\"\r\n                  name=\"userName\"\r\n                  autoComplete=\"Ismingiz\"\r\n                  autoFocus\r\n                  inputRef={userName}\r\n                  \r\n               />\r\n               \r\n               \r\n               <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={handleSubmit}\r\n               >\r\n                  Sign In\r\n               </Button>\r\n               \r\n            </form>\r\n         </div>\r\n      </Container>\r\n   );\r\n}","import PersonIcon from '@material-ui/icons/Person';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem'; \r\nimport Avatar from '@material-ui/core/Avatar';\r\nconst AvatarBlock = ({text, userId, setTeleName}) => {\r\n   return (\r\n      <ListItem button onClick={() => {\r\n         window.localStorage.setItem('userName', userId)\r\n         setTeleName(text)\r\n      }}>\r\n         <Avatar alt={text} src={`${PersonIcon}`} style={{ background: '#3F51B5'}}/>\r\n         <ListItemText primary={text} style={{marginLeft: '20px'}}/>\r\n      </ListItem>\r\n   )\r\n}\r\n\r\nexport default AvatarBlock","import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './main.scss'\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      minWidth: 275,\r\n   },\r\n   bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n   },\r\n   title: {\r\n      fontSize: 14,\r\n   },\r\n   pos: {\r\n      marginBottom: 12,\r\n   },\r\n});\r\n\r\nexport default function CardBlock({name, time, text, isMe}) {\r\n   const classes = useStyles();\r\n   const bull = <span className={classes.bullet}>•</span>;\r\n\r\n   return (\r\n      <div className={`cardBlock ${isMe ? 'active' : ''}`}>\r\n         <Card className={`${classes.root} cardBlock-inner`} variant=\"outlined\" >\r\n            <CardContent>\r\n               <div className=\"row\" style={{ display: 'flex', alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                  <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\" gutterBottom style={{ fontWeight: 900 }}>\r\n                     {name}\r\n                  </Typography>\r\n                  <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\" gutterBottom style={{ background: \"#3F51B5\", color: '#fff', padding: '0px 5px', borderRadius: '5px', fontSize: '17px' }}>\r\n                     {time}\r\n                  </Typography>\r\n               </div>\r\n\r\n\r\n               <Typography variant=\"body2\" component=\"p\">\r\n                  {text}\r\n               </Typography>\r\n            </CardContent>\r\n         </Card>\r\n      </div>\r\n   );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport AvatarBlock from '../../Components/Avatar';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Input from '@material-ui/core/Input';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardBlock from '../../Components/CardBlock';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n   root: {\r\n      display: 'flex',\r\n   },\r\n   appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n   },\r\n   appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n   },\r\n   menuButton: {\r\n      marginRight: 36,\r\n   },\r\n   hide: {\r\n      display: 'none',\r\n   },\r\n   drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n   },\r\n   drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n   },\r\n   drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n         width: theme.spacing(9) + 1,\r\n      },\r\n   },\r\n   toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n   },\r\n   content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n   },\r\n}));\r\n\r\nexport default function Body({ users, client, messages, setMessages }) {\r\n   const date = new Date()\r\n   const message = useRef()\r\n   \r\n   const classes = useStyles();\r\n   const theme = useTheme();\r\n   const [open, setOpen] = React.useState(false);\r\n   const [teleName, setTelename] = useState('Userni tanlang !')\r\n\r\n\r\n   const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n   };\r\n\r\n   const handleDrawerClose = () => {\r\n      setOpen(false);\r\n   };\r\n   console.log(messages);\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <CssBaseline />\r\n         <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n               [classes.appBarShift]: open,\r\n            })}\r\n         >\r\n            <Toolbar>\r\n               <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  edge=\"start\"\r\n                  className={clsx(classes.menuButton, {\r\n                     [classes.hide]: open,\r\n                  })}\r\n               >\r\n                  <MenuIcon />\r\n               </IconButton>\r\n               <Typography variant=\"h6\" noWrap>\r\n                  {teleName}\r\n               </Typography>\r\n            </Toolbar>\r\n         </AppBar>\r\n         <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n               [classes.drawerOpen]: open,\r\n               [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n               paper: clsx({\r\n                  [classes.drawerOpen]: open,\r\n                  [classes.drawerClose]: !open,\r\n               }),\r\n            }}\r\n         >\r\n            <div className={classes.toolbar}>\r\n               <IconButton onClick={handleDrawerClose}>\r\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n               </IconButton>\r\n            </div>\r\n            <Divider />\r\n\r\n            <Divider />\r\n            <List>\r\n               {\r\n                  users.length ? (\r\n                     users.map(el => (\r\n                        <AvatarBlock text={el.name} userId={el.userId} setTeleName={setTelename}/>\r\n                     ))\r\n                  ) : (\r\n                     <></>\r\n                  )\r\n               }\r\n            </List>\r\n         </Drawer>\r\n         <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n\r\n            <div className=\"row\" >\r\n\r\n               {\r\n                  messages.length ? (\r\n                     messages.map(el => (\r\n                        <CardBlock\r\n                           name={el.user}\r\n                           time={el.time}\r\n                           text={el.message}\r\n                           isMe={el.user == window.localStorage.getItem('user') ? true : false}\r\n                        />\r\n                     ))\r\n                  ) : (\r\n                     <></>\r\n                  )\r\n               }\r\n            </div>\r\n            <form style={{ display: 'flex', position: 'fixed', bottom: '10px', width: '100%' }}>\r\n               <Input aria-label=\"minimum height\" minRows={20} style={{ width: '75%' }} placeholder=\"Habaringizni yozing....\"\r\n                  inputRef={message}\r\n               />\r\n               <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  endIcon={<SendIcon />}\r\n                  type=\"submit\"\r\n                  onClick={e => {\r\n                        e.preventDefault()\r\n                     if (teleName == 'Userni tanlang !') {\r\n                        alert('Userni tanlang !')\r\n                     }else {\r\n                        client.emit('send_message', {\r\n                           message: message.current.value,\r\n                           userId: window.localStorage.getItem('userName'),\r\n                           userName: window.localStorage.getItem('user')\r\n                        })\r\n                        console.log(messages);\r\n                        setMessages([...messages, {\r\n                           message: message.current.value,\r\n                           user: window.localStorage.getItem('user'),\r\n                           time: date.toLocaleTimeString()\r\n                        }])\r\n                     }\r\n                        \r\n                     {\r\n                        \r\n            }\r\n                        // setMessage([...message, {\r\n                        //    ab: 'm',\r\n                        //    message: e.target.value\r\n                        // }])\r\n                     \r\n                  }}\r\n               >\r\n                  Send\r\n               </Button>\r\n            </form>\r\n         </main>\r\n      </div>\r\n   );\r\n}\r\n","import IO from 'socket.io-client'\nimport {useEffect, useState} from 'react'\n\n\nimport './main.css'\nimport SignIn from './containers/Sign/Sign'\nimport Body  from './containers/Body/Body'\n\n\nfunction App() {\n  const [client, setClient] = useState(null)\n  const [users, setUsers] = useState([])\n  const [token, setToken] = useState(false)\n  const [myName, setMyName] = useState('')\n  const [messages, setMessages] = useState([])\n\n \n\n  useEffect(()=> {\n    setClient(IO('http://192.168.1.253:4200', {\n      transports: ['websocket']\n    }))\n  }, [])\n\n\n\n  useEffect(() => {\n    if (client)  {\n\n\n      client.on(\"send_message\", data => {\n        setMessages([...messages, ...data])\n      });\n      client.on(\"message\", data => {\n        let array = []\n        for (let key in data) {\n          if (key != window.localStorage.getItem('user'))\n            array.push({ name: key, userId: data[key] })\n        }\n          \n        \n        setUsers(array)\n      });\n      client.on('men_keldim', data => {\n        let array = []\n        for(let key in data) {\n          if(key != window.localStorage.getItem('user'))\n            array.push({name: key, userId: data[key]})\n          }\n        \n        setUsers(array)\n        // setUsers([data])\n      })\n      // client.on('typing', () => setTyping(true))\n      // client.on('send', data => {\n      //   setMessage([...message, {\n      //     ab: 'u',\n      //     message: data\n      //   }])\n      //   setTyping(false)\n      // })\n    }\n  }, [client, messages])\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <input \n        type=\"text\"\n        placeholder=\"Name\"\n        spellCheck={false}\n        autoComplete='off'\n        onKeyUp={ e => {\n          if(e.keyCode === 13) {\n            client.emit('come', e.target.value)\n            setMessage([...message, {\n              ab: 'm',\n              message: e.target.value}])\n          }else {\n            client.emit('typing')\n          }\n        }}\n        \n       /> */}\\\n\n      {\n        token ? (\n          <Body users={users} client={client} messages={messages} setMessages={setMessages}/>\n          ) : (\n            <SignIn setToken={setToken} client={client} setMyName={setMyName} />\n            )\n      }\n\n       \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}